{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\NicompterWebsite\\\\UrlShortener\\\\nicompter-urlshortener\\\\src\\\\components\\\\CreateLinkPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CreateLinkPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateLinkPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [ram, setRam] = useState('');\n  const [ramUnit, setRamUnit] = useState('MB');\n  const [ip, setIp] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isNaN(ram) || ram <= 0) {\n      setError('Bitte geben Sie eine gültige RAM-Größe ein.');\n      return;\n    }\n\n    // Konvertiere RAM in MB, falls die Einheit GB ist\n    const ramInMB = ramUnit === 'GB' ? ram * 1024 : ram;\n    try {\n      const response = await fetch('http://localhost:5001/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          name\n        })\n      });\n      if (!response.ok) throw new Error('Failed to create ShortURL');\n      navigate('/dashboard');\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-node-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Node erstellen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group ram-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"ram\",\n            value: ram,\n            onChange: e => setRam(e.target.value),\n            placeholder: \"Maximaler RAM\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"ramUnit\",\n            value: ramUnit,\n            onChange: e => setRamUnit(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MB\",\n              children: \"MB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"GB\",\n              children: \"GB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"ip\",\n            value: ip,\n            onChange: e => setIp(e.target.value),\n            placeholder: \"IP Address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button-33\",\n          children: \"Node erstellen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateLinkPage, \"vA3ld7NY9Lf8jnVvhr+8n+dh8MA=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateLinkPage;\nexport default CreateLinkPage;\nvar _c;\n$RefreshReg$(_c, \"CreateLinkPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateLinkPage","_s","name","setName","ram","setRam","ramUnit","setRamUnit","ip","setIp","error","setError","navigate","handleSubmit","e","preventDefault","isNaN","ramInMB","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","ok","Error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Nico/Documents/NicompterWebsite/UrlShortener/nicompter-urlshortener/src/components/CreateLinkPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './CreateLinkPage.css';\r\n\r\nconst CreateLinkPage = () => {\r\n    const [name, setName] = useState('');\r\n    const [ram, setRam] = useState('');\r\n    const [ramUnit, setRamUnit] = useState('MB');\r\n    const [ip, setIp] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isNaN(ram) || ram <= 0) {\r\n            setError('Bitte geben Sie eine gültige RAM-Größe ein.');\r\n            return;\r\n        }\r\n\r\n        // Konvertiere RAM in MB, falls die Einheit GB ist\r\n        const ramInMB = ramUnit === 'GB' ? ram * 1024 : ram;\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5001/add', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify({ name })\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Failed to create ShortURL');\r\n\r\n            navigate('/dashboard');\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-node-container\">\r\n            <div className=\"form-container\">\r\n                <h1>Node erstellen</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            placeholder=\"Name\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group ram-container\">\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"ram\"\r\n                            value={ram}\r\n                            onChange={(e) => setRam(e.target.value)}\r\n                            placeholder=\"Maximaler RAM\"\r\n                            required\r\n                        />\r\n                        <select\r\n                            id=\"ramUnit\"\r\n                            value={ramUnit}\r\n                            onChange={(e) => setRamUnit(e.target.value)}\r\n                        >\r\n                            <option value=\"MB\">MB</option>\r\n                            <option value=\"GB\">GB</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"ip\"\r\n                            value={ip}\r\n                            onChange={(e) => setIp(e.target.value)}\r\n                            placeholder=\"IP Address\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"button-33\">Node erstellen</button>\r\n                    {error && <p className=\"error\">{error}</p>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateLinkPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}