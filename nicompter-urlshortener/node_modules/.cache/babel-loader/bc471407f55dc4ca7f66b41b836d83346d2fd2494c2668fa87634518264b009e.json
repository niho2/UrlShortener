{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\NicompterWebsite\\\\UrlShortener\\\\nicompter-urlshortener\\\\src\\\\components\\\\LoginRoute.js\";\n// ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// Hilfsfunktion zur Überprüfung, ob das Token abgelaufen ist\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isTokenExpired = token => {\n  if (!token) return true;\n  const payload = JSON.parse(atob(token.split('.')[1])); // Token-Daten dekodieren\n  const now = Math.floor(Date.now() / 1000); // Aktuelle Zeit in Sekunden seit dem Epoch\n  return payload.exp < now;\n};\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem('token');\n\n  // Token überprüfen und zur Login-Seite umleiten, falls es abgelaufen oder ungültig ist\n  if (!isTokenExpired(token)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","isTokenExpired","token","payload","JSON","parse","atob","split","now","Math","floor","Date","exp","ProtectedRoute","children","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Nico/Documents/NicompterWebsite/UrlShortener/nicompter-urlshortener/src/components/LoginRoute.js"],"sourcesContent":["// ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n// Hilfsfunktion zur Überprüfung, ob das Token abgelaufen ist\r\nconst isTokenExpired = (token) => {\r\n    if (!token) return true;\r\n\r\n    const payload = JSON.parse(atob(token.split('.')[1])); // Token-Daten dekodieren\r\n    const now = Math.floor(Date.now() / 1000); // Aktuelle Zeit in Sekunden seit dem Epoch\r\n    return payload.exp < now;\r\n};\r\nconst ProtectedRoute = ({ children }) => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Token überprüfen und zur Login-Seite umleiten, falls es abgelaufen oder ungültig ist\r\n    if (!isTokenExpired(token)) {\r\n        return <Navigate to=\"/dashboard\" />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAC9B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EAEvB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACH,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;EAC3C,OAAOL,OAAO,CAACS,GAAG,GAAGJ,GAAG;AAC5B,CAAC;AACD,MAAMK,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC,MAAMZ,KAAK,GAAGa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAI,CAACf,cAAc,CAACC,KAAK,CAAC,EAAE;IACxB,oBAAOF,OAAA,CAACF,QAAQ;MAACmB,EAAE,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvC;EAEA,OAAOP,QAAQ;AACnB,CAAC;AAACQ,EAAA,GATIT,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}